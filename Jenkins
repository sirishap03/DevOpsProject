pipeline {
    agent any

    environment {
        DOCKER_USERNAME = "praveenbudumuru"
    }

    stages {
        stage("1. Cleanup") {
            steps {
                deleteDir()             
            }
        }

        stage("2. Git Checkout") {
            steps {
                dir("DevopsProject1") {
                    script {
                        git branch: 'main', url: 'https://github.com/sirishap03/DevOpsProject.git'
                    }
                }
            }
        }

        stage("3. Maven Unit Test") {
            steps {
                dir("DevopsProject1") {
                    sh 'mvn test'
                }
            }
        }

        stage("4. Maven Build") {
            steps {
                dir("DevopsProject1") {
                    sh 'mvn clean install'
                }
            }
        }

        stage("5. Maven Integration Test") {
            steps {
                dir("DevopsProject1") {
                    sh 'mvn verify'
                }
            }
        }

        stage("6. Docker Image Build") {
            steps {
                dir("DevopsProject1") {
                    script {
                        def job = env.JOB_NAME.toLowerCase()
                        sh "docker build -t ${job}:${BUILD_NUMBER} ."
                    }
                }
            }
        }

        stage("7. Docker Image Tag") {
            steps {
                dir("DevopsProject1") {
                    script {
                        def job = env.JOB_NAME.toLowerCase()
                        sh "docker tag ${job}:${BUILD_NUMBER} ${DOCKER_USERNAME}/${job}:v${BUILD_NUMBER}"
                        sh "docker tag ${job}:${BUILD_NUMBER} ${DOCKER_USERNAME}/${job}:latest"
                    }
                }
            }
        }

        stage("8. Trivy Image Scan") {
            steps {
                script {
                    def job = env.JOB_NAME.toLowerCase()
                    sh "trivy image ${DOCKER_USERNAME}/${job}:v${BUILD_NUMBER} > scan.txt || true"
                }
            }
        }

        stage("9. Docker Image Push") {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'my_dockerhub_creds', usernameVariable: 'docker_user', passwordVariable: 'docker_pass')]) {
                        sh "docker login -u '${docker_user}' -p '${docker_pass}'"
                        def job = env.JOB_NAME.toLowerCase()
                        sh "docker push ${DOCKER_USERNAME}/${job}:v${BUILD_NUMBER}"
                        sh "docker push ${DOCKER_USERNAME}/${job}:latest"
                    }
                }
            }
        }

        // Optional Cleanup Stage
        // stage("10. Docker Image Cleanup") {
        //     steps {
        //         script {
        //             sh "docker image prune -af"
        //         }
        //     }
        // }
    }
}

