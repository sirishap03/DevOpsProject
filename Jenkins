pipeline {
    agent any

    tools {
        maven 'Maven 7' // Must match Jenkins tool config name
    }

    environment {
        IMAGE_NAME = "your-dockerhub-username/demo-app"
        IMAGE_TAG = "v1"
    }

    stages {
        stage('Clone Repo') {
            steps {
                git 'https://github.com/sirishap03/DevOpsProject.git'
            }
        }

        stage('Build with Maven') {
            steps {
                sh 'mvn clean package -DskipTests'
            }
        }

        stage('Trivy Scan') {
            steps {
                sh 'trivy fs . --exit-code 0 || true'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t $IMAGE_NAME:$IMAGE_TAG .'
            }
        }

        stage('Trivy Scan on Image') {
            steps {
                sh 'trivy image $IMAGE_NAME:$IMAGE_TAG --exit-code 0 || true'
            }
        }

        stage('Push to DockerHub') {
            when {
                expression { return env.DOCKER_PUSH == 'true' }
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'hub_creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                      echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                      docker push $IMAGE_NAME:$IMAGE_TAG
                    '''
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully üéâ'
        }
        failure {
            echo 'Pipeline failed ‚ùå'
        }
    }
}
